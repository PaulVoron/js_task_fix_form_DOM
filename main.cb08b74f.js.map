{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","input","label","createElement","className","setAttribute","getAttribute","text","name","toUpperCase","i","length","textContent","placeholder","parentElement","insertAdjacentElement"],"mappings":";AAAA,aAsBC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlBD,IAFA,IAAMA,EAASC,SAASC,iBAAiB,eAEjBF,EAAAA,EAAAA,EAAAA,EAAAA,GAAS,EAAA,EAAA,OAAA,IAAA,CAAtBG,IAAAA,EAAN,EAAA,GACGC,EAAQH,SAASI,cAAc,SAErCD,EAAME,UAAY,cAClBF,EAAMG,aAAa,MAAOJ,EAAMK,aAAa,OAIxC,IAFDC,IAAAA,EAAON,EAAMO,KAAK,GAAGC,cAEhBC,EAAI,EAAGA,EAAIT,EAAMO,KAAKG,OAAQD,IACjCT,EAAMO,KAAKE,KAAOT,EAAMO,KAAKE,GAAGD,gBAClCF,GAAQ,KAEVA,GAAQN,EAAMO,KAAKE,GAGrBR,EAAMU,YAAcL,EAAKE,cACzBR,EAAMY,YAAcN,EACpBN,EAAMa,cAAcC,sBAAsB,aAAcb","file":"main.cb08b74f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('.field-text');\n\nfor (const input of [...inputs]) {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.setAttribute('for', input.getAttribute('id'));\n\n  let text = input.name[0].toUpperCase();\n\n  for (let i = 1; i < input.name.length; i++) {\n    if (input.name[i] === input.name[i].toUpperCase()) {\n      text += ' ';\n    }\n    text += input.name[i];\n  }\n\n  label.textContent = text.toUpperCase();\n  input.placeholder = text;\n  input.parentElement.insertAdjacentElement('afterbegin', label);\n}\n"]}